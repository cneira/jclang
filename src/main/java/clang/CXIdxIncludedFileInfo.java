package clang;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * <i>native declaration : src/main/c/clang-c/Index.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CXIdxIncludedFileInfo extends Structure {
    /**
     * \brief Location of '#' in the \#include/\#import directive.<br>
     * C type : CXIdxLoc
     */
    public CXIdxLoc hashLoc;
    /**
     * \brief Filename as written in the \#include/\#import directive.<br>
     * C type : const char*
     */
    public Pointer filename;
    /**
     * \brief The actual file that the \#include/\#import directive resolved to.<br>
     * C type : CXFile
     */
    public Pointer file;
    public int isImport;
    public int isAngled;
    /**
     * \brief Non-zero if the directive was automatically turned into a module<br>
     * import.
     */
    public int isModuleImport;

    public CXIdxIncludedFileInfo() {
        super();
        initFieldOrder();
    }

    protected void initFieldOrder() {
        setFieldOrder(new String[]{"hashLoc", "filename", "file", "isImport", "isAngled", "isModuleImport"});
    }

    /**
     * @param hashLoc        \brief Location of '#' in the \#include/\#import directive.<br>
     *                       C type : CXIdxLoc<br>
     * @param filename       \brief Filename as written in the \#include/\#import directive.<br>
     *                       C type : const char*<br>
     * @param file           \brief The actual file that the \#include/\#import directive resolved to.<br>
     *                       C type : CXFile<br>
     * @param isModuleImport \brief Non-zero if the directive was automatically turned into a module<br>
     *                       import.
     */
    public CXIdxIncludedFileInfo(CXIdxLoc hashLoc, Pointer filename, Pointer file, int isImport, int isAngled, int isModuleImport) {
        super();
        this.hashLoc = hashLoc;
        this.filename = filename;
        this.file = file;
        this.isImport = isImport;
        this.isAngled = isAngled;
        this.isModuleImport = isModuleImport;
        initFieldOrder();
    }

    public static class ByReference extends CXIdxIncludedFileInfo implements Structure.ByReference {

    }

    public static class ByValue extends CXIdxIncludedFileInfo implements Structure.ByValue {

    }
}
