package clang;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * <i>native declaration : src/main/c/clang-c/Index.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CXCursor extends Structure {
	/**
	 * @see CXCursorKind<br>
	 * C type : CXCursorKind
	 */
	public int kind;
	public int xdata;
	/// C type : void*[3]
	public Pointer[] data = new Pointer[3];
	public CXCursor() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"kind", "xdata", "data"});
	}
	/**
	 * @param kind @see CXCursorKind<br>
	 * C type : CXCursorKind<br>
	 * @param data C type : void*[3]
	 */
	public CXCursor(int kind, int xdata, Pointer data[]) {
		super();
		this.kind = kind;
		this.xdata = xdata;
		if (data.length != this.data.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.data = data;
		initFieldOrder();
	}
	public static class ByReference extends CXCursor implements Structure.ByReference {
		
	};
	public static class ByValue extends CXCursor implements Structure.ByValue {
		
	};
}
