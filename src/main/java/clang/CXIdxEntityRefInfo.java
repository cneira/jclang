package clang;

import com.sun.jna.Structure;

/**
 * <i>native declaration : src/main/c/clang-c/Index.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CXIdxEntityRefInfo extends Structure {
    /**
     * @see CXIdxEntityRefKind<br>
     *      C type : CXIdxEntityRefKind
     */
    public int kind;
    /**
     * \brief Reference cursor.<br>
     * C type : CXCursor
     */
    public CXCursor cursor;
    /// C type : CXIdxLoc
    public CXIdxLoc loc;
    /**
     * \brief The entity that gets referenced.<br>
     * C type : const CXIdxEntityInfo*
     */
    public clang.CXIdxEntityInfo.ByReference referencedEntity;
    /**
     * \brief Immediate "parent" of the reference. For example:<br>
     * <br>
     * \code<br>
     * Foo *var;<br>
     * \endcode<br>
     * <br>
     * The parent of reference of type 'Foo' is the variable 'var'.<br>
     * For references inside statement bodies of functions/methods,<br>
     * the parentEntity will be the function/method.<br>
     * C type : const CXIdxEntityInfo*
     */
    public clang.CXIdxEntityInfo.ByReference parentEntity;
    /**
     * \brief Lexical container context of the reference.<br>
     * C type : const CXIdxContainerInfo*
     */
    public clang.CXIdxContainerInfo.ByReference container;

    public CXIdxEntityRefInfo() {
        super();
        initFieldOrder();
    }

    protected void initFieldOrder() {
        setFieldOrder(new String[]{"kind", "cursor", "loc", "referencedEntity", "parentEntity", "container"});
    }

    /**
     * @param kind             @see CXIdxEntityRefKind<br>
     *                         C type : CXIdxEntityRefKind<br>
     * @param cursor           \brief Reference cursor.<br>
     *                         C type : CXCursor<br>
     * @param loc              C type : CXIdxLoc<br>
     * @param referencedEntity \brief The entity that gets referenced.<br>
     *                         C type : const CXIdxEntityInfo*<br>
     * @param parentEntity     \brief Immediate "parent" of the reference. For example:<br>
     *                         <br>
     *                         \code<br>
     *                         Foo *var;<br>
     *                         \endcode<br>
     *                         <br>
     *                         The parent of reference of type 'Foo' is the variable 'var'.<br>
     *                         For references inside statement bodies of functions/methods,<br>
     *                         the parentEntity will be the function/method.<br>
     *                         C type : const CXIdxEntityInfo*<br>
     * @param container        \brief Lexical container context of the reference.<br>
     *                         C type : const CXIdxContainerInfo*
     */
    public CXIdxEntityRefInfo(int kind, CXCursor cursor, CXIdxLoc loc, clang.CXIdxEntityInfo.ByReference referencedEntity, clang.CXIdxEntityInfo.ByReference parentEntity, clang.CXIdxContainerInfo.ByReference container) {
        super();
        this.kind = kind;
        this.cursor = cursor;
        this.loc = loc;
        this.referencedEntity = referencedEntity;
        this.parentEntity = parentEntity;
        this.container = container;
        initFieldOrder();
    }

    public static class ByReference extends CXIdxEntityRefInfo implements Structure.ByReference {

    }

    public static class ByValue extends CXIdxEntityRefInfo implements Structure.ByValue {

    }
}
