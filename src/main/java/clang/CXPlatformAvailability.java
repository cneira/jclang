package clang;
import com.sun.jna.Structure;
/**
 * <i>native declaration : src/main/c/clang-c/Index.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CXPlatformAvailability extends Structure {
	/**
	 * \brief A string that describes the platform for which this structure<br>
	 * provides availability information.<br>
	 * * Possible values are "ios" or "macosx".<br>
	 * C type : CXString
	 */
	public CXString Platform;
	/**
	 * \brief The version number in which this entity was introduced.<br>
	 * C type : CXVersion
	 */
	public CXVersion Introduced;
	/**
	 * \brief The version number in which this entity was deprecated (but is<br>
	 * still available).<br>
	 * C type : CXVersion
	 */
	public CXVersion Deprecated;
	/**
	 * \brief The version number in which this entity was obsoleted, and therefore<br>
	 * is no longer available.<br>
	 * C type : CXVersion
	 */
	public CXVersion Obsoleted;
	/// \brief Whether the entity is unconditionally unavailable on this platform.
	public int Unavailable;
	/**
	 * \brief An optional message to provide to a user of this API, e.g., to<br>
	 * suggest replacement APIs.<br>
	 * C type : CXString
	 */
	public CXString Message;
	public CXPlatformAvailability() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"Platform", "Introduced", "Deprecated", "Obsoleted", "Unavailable", "Message"});
	}
	/**
	 * @param Platform \brief A string that describes the platform for which this structure<br>
	 * provides availability information.<br>
	 * * Possible values are "ios" or "macosx".<br>
	 * C type : CXString<br>
	 * @param Introduced \brief The version number in which this entity was introduced.<br>
	 * C type : CXVersion<br>
	 * @param Deprecated \brief The version number in which this entity was deprecated (but is<br>
	 * still available).<br>
	 * C type : CXVersion<br>
	 * @param Obsoleted \brief The version number in which this entity was obsoleted, and therefore<br>
	 * is no longer available.<br>
	 * C type : CXVersion<br>
	 * @param Unavailable \brief Whether the entity is unconditionally unavailable on this platform.<br>
	 * @param Message \brief An optional message to provide to a user of this API, e.g., to<br>
	 * suggest replacement APIs.<br>
	 * C type : CXString
	 */
	public CXPlatformAvailability(CXString Platform, CXVersion Introduced, CXVersion Deprecated, CXVersion Obsoleted, int Unavailable, CXString Message) {
		super();
		this.Platform = Platform;
		this.Introduced = Introduced;
		this.Deprecated = Deprecated;
		this.Obsoleted = Obsoleted;
		this.Unavailable = Unavailable;
		this.Message = Message;
		initFieldOrder();
	}
	public static class ByReference extends CXPlatformAvailability implements Structure.ByReference {
		
	};
	public static class ByValue extends CXPlatformAvailability implements Structure.ByValue {
		
	};
}
