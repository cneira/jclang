package clang;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * <i>native declaration : src/main/c/clang-c/Index.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CXTUResourceUsage extends Structure {
	/**
	 * \brief Private data member, used for queries.<br>
	 * C type : void*
	 */
	public Pointer data;
	/// \brief The number of entries in the 'entries' array.
	public int numEntries;
	/**
	 * \brief An array of key-value pairs, representing the breakdown of memory<br>
	 * usage.<br>
	 * C type : CXTUResourceUsageEntry*
	 */
	public clang.CXTUResourceUsageEntry.ByReference entries;
	public CXTUResourceUsage() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"data", "numEntries", "entries"});
	}
	/**
	 * @param data \brief Private data member, used for queries.<br>
	 * C type : void*<br>
	 * @param numEntries \brief The number of entries in the 'entries' array.<br>
	 * @param entries \brief An array of key-value pairs, representing the breakdown of memory<br>
	 * usage.<br>
	 * C type : CXTUResourceUsageEntry*
	 */
	public CXTUResourceUsage(Pointer data, int numEntries, clang.CXTUResourceUsageEntry.ByReference entries) {
		super();
		this.data = data;
		this.numEntries = numEntries;
		this.entries = entries;
		initFieldOrder();
	}
	public static class ByReference extends CXTUResourceUsage implements Structure.ByReference {
		
	};
	public static class ByValue extends CXTUResourceUsage implements Structure.ByValue {
		
	};
}
